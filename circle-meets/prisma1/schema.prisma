generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  relationMode      = "prisma"
}

model Account {
  id                String  @id
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  @@unique([provider, providerAccountId])
}

model Conversation {
  id Int @id @default(autoincrement())
}

model Message {
  id             Int    @id @default(autoincrement())
  body           String
  senderId       Int
  conversationId Int

  @@index([senderId], map: "sender")
}

model Session {
  id           String   @id
  sessionToken String   @unique
  userId       String
  expires      DateTime
}

model User {
  id            Int       @id @default(autoincrement())
  firstName     String
  lastName      String
  username      String    @unique
  email         String    @unique
  password      String
  bio           String?
  emailVerified DateTime?
  image         String?
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model ConversationToMessage {
  A Int
  B Int

  @@unique([A, B], map: "_ConversationToMessage_AB_unique")
  @@index([B], map: "_ConversationToMessage_B_index")
  @@map("_ConversationToMessage")
}

model ConversationToUser {
  A Int
  B Int

  @@unique([A, B], map: "_ConversationToUser_AB_unique")
  @@index([B], map: "_ConversationToUser_B_index")
  @@map("_ConversationToUser")
}

model user {
  id            Int       @unique(map: "id") @default(autoincrement())
  displayName   String?   @db.VarChar(100)
  username      String    @db.VarChar(100)
  email         String    @unique(map: "email") @db.VarChar(255)
  password      String    @db.VarChar(255)
  bio           String?   @db.VarChar(255)
  emailVerified DateTime? @db.DateTime(0)
  image         String?   @db.VarChar(255)
}
