generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  relationMode      = "prisma"
}

model Conversation {
  id Int @id @default(autoincrement())
}

model Message {
  id             Int    @id @default(autoincrement())
  body           String
  senderId       Int
  conversationId Int

  @@index([senderId], map: "sender")
}

model ConversationToMessage {
  A Int
  B Int

  @@unique([A, B], map: "_ConversationToMessage_AB_unique")
  @@index([B], map: "_ConversationToMessage_B_index")
  @@map("_ConversationToMessage")
}

model ConversationToUser {
  A Int
  B Int

  @@unique([A, B], map: "_ConversationToUser_AB_unique")
  @@index([B], map: "_ConversationToUser_B_index")
  @@map("_ConversationToUser")
}

model accounts {
  id                   Int       @id @default(autoincrement())
  compound_id          String    @unique(map: "compound_id") @db.VarChar(255)
  user_id              Int
  provider_type        String    @db.VarChar(255)
  provider_id          String    @db.VarChar(255)
  provider_account_id  String    @db.VarChar(255)
  refresh_token        String?   @db.Text
  access_token         String?   @db.Text
  access_token_expires DateTime? @db.Timestamp(6)
  created_at           DateTime  @default(now()) @db.Timestamp(6)
  updated_at           DateTime  @default(now()) @db.Timestamp(6)

  @@index([provider_account_id], map: "provider_account_id")
  @@index([provider_id], map: "provider_id")
  @@index([user_id], map: "user_id")
  @@unique([provider_id, provider_account_id], name: "provider_providerAccountId")
}

model sessions {
  id            Int      @id @default(autoincrement())
  user_id       Int
  expires       DateTime @db.Timestamp(6)
  session_token String   @unique(map: "session_token") @db.VarChar(255)
  access_token  String   @unique(map: "access_token") @db.VarChar(255)
  created_at    DateTime @default(now()) @db.Timestamp(6)
  updated_at    DateTime @default(now()) @db.Timestamp(6)
}

model users {
  id             Int       @id @default(autoincrement())
  name           String?   @db.VarChar(255)
  email          String?   @unique(map: "email") @db.VarChar(255)
  email_verified DateTime? @db.Timestamp(6)
  image          String?   @db.VarChar(255)
  created_at     DateTime  @default(now()) @db.Timestamp(6)
  updated_at     DateTime  @default(now()) @db.Timestamp(6)
}

model verification_requests {
  id         Int      @id @default(autoincrement())
  identifier String   @db.VarChar(255)
  token      String   @unique(map: "token") @db.VarChar(255)
  expires    DateTime @db.Timestamp(6)
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
}
